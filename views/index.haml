!!!
%html{:lang => "en"}
  %head
    %meta{:content => "text/html; charset=UTF-8", "http-equiv" => "Content-Type"}/
    %meta{:charset => "utf-8"}/
    %meta{:content => "width=1024", :name => "viewport"}/
    %meta{:content => "yes", :name => "apple-mobile-web-app-capable"}/
    %title 2016 Roadmap
    %link{:href => "https://fonts.googleapis.com/css?family=Open+Sans:regular,semibold,italic,italicsemibold|PT+Sans:400,700,400italic,700italic|PT+Serif:400,700,400italic,700italic", :rel => "stylesheet"}/
    %link{href: "impress-demo.css", rel: "stylesheet"}
    %script{type: 'text/javascript', src: 'js/impress.js'}
    %script{type: 'text/javascript', src: 'faye/client.js'}
    %link{:href => "favicon.png", :rel => "shortcut icon"}/
    %link{:href => "apple-touch-icon.png", :rel => "apple-touch-icon"}/
  %body.impress-not-supported

    #impress

      #title.step{"data-scale" => "4", "data-x" => "0", "data-y" => "0"}
        %span
          ReedHein
        %br
        %span
          Developer Roadmap ideas for 2016-2017

      #Data.step.slide{"data-x" => "0", "data-y" => "-1500"}
        %h2
          Data
        %hr
          %ul
            %li
              MLS integration
              %p
                Win client for Happy Hour
                %br
                create resellable software service
            %li
              Data Migration
              %br{style: 'clear:both'}
              %p{style: 'float:left'}
                Kitten Klicker
              %img{src: 'http://placekitten.com/40/40', style: 'margin-left: 1em;float:left'}
              %br{style: 'clear:both'}
              %p
                Zoho => SFDC, SFDC => Box, Box => Box
            %li Elimination of Zoho
            %li
              Data Auditing
              %p Look for accidentally duplicated attachments
              %p Find/Fix poorly migrated data
            %li 
              Backup
              %p Create automated backups

      #Analytics.step.slide{"data-x" => "1000", "data-y" => "-1500"}
        %h1 
          Analytics
        %hr
        %ul
          %li
            Huggins Social Media
          %p
            Radian6 is $1,000/month -- Huggins is free
            Developing software that monitors the brand
          %li
            Realtime Analytics
            %p
              Easily derive pertinent data at a glance

      #Huggins.step.slide{"data-rotate" => "90", "data-scale" => "5", "data-x" => "850", "data-y" => "3000"}
        %h1
          %strong
            Huggins Social Media
        %hr
        %img{src: 'huggins.png', height: '480', width: '640'}

      #Visualization.step.slide{"data-rotate" => "90", "data-scale" => "5", "data-x" => "850", "data-y" => "8000"}
        %h1
          %strong
            Data Visualization
        %p Create visualization to inspire and to find insight
        %img{src: 'tentical.jpg', height: '480', width: '640'}

      #SalesForce.step.slide{"data-x" => "2000", "data-y" => "-1500"}
        %h1
          SalesForce
        %hr
          %ul
            %li
              Compensation
            %li
              Quickbooks Integration
            %li
              Automation of Business Logic
            %li
              Rich's tasks
            %li
              Trevor's tasks

      #Compensation.step.slide{"data-rotate" => "90", "data-scale" => "5", "data-x" => "850", "data-y" => "13000"}
        %h1
          Compensation
        %hr
        %ul.small
          %li
            On Demand Report for Sales
          %li Accounting Reports
          %li Chargeable Compensations
        %img{src: 'compensations.png', height: '380', width: '640'}

      #Apps.step.slide{"data-x" => "3000", "data-y" => "-1500"}
        %h1
          App Development
        %hr
        %p
          An app would be an abitious approach to a problem that doesn't yet exist. But, that doesn't mean that it won't

      #Web.step.slide{"data-x" => "4000", "data-y" => "-1500"}
        %h1
          Web Development
        %hr
        %ul
          %li
            provide resource/interface to update current clients

      #Security.step.slide{"data-x" => "5000", "data-y" => "-1500"}
        %h2
          Securty
        %hr
        %ol
          %li 
            Rogue Access Point
            (
            %a{href: 'https://www.wifipineapple.com/'}
              Pineapple
            )
          %li Red team
          %li
            Phishing
            (
            %a{href: 'https://getgophish.com/'}
              Gophish
            )
          %li
            Intrusion Detection System
            (
            %a{href: 'https://www.bro.org/'}
              BRO
            )
          %li Random USB
          %li
            (
            %a{href: 'https://github.com/upgoingstar/datasploit'}
              OSINT High profile staff
            )
          %li
            OSINT Darkweb
            (
            %a{href: 'https://github.com/Netflix/Scumblr'}
              Scumblr
            )
          %li
            Web Vulnerabilty
            (
            %a{href: 'http://vulnreport.io/'}
              vulnreport
            )
          %li Windows 10 Vulnerability testing
          %li Device Auditing
          %li Personel Training
          %li
            Network Monitoring
            (
            %a{href: 'https://securityonion.net/'}
              Security Onion
            )
          %li Honeypot
          %li Policies & Standards
          %li Incident Response Documentation

      #big.step{"data-rotate" => "180", "data-scale" => "6", "data-x" => "3500", "data-y" => "2100"}
        %p
          Confront complex problems...

      #tiny.step{"data-rotate" => "300", "data-scale" => "1", "data-x" => "2825", "data-y" => "2325", "data-z" => "-3000"}
        %p
          with eligent solutions

      #Conclusion.step{"data-scale" => "10", "data-x" => "9000", "data-y" => "1500"}
        %h1 howdy
    /
      Hint is not related to impress.js in any way.
      
      But it can show you how to use impress.js features in creative way.
      
      When the presentation step is shown (selected) its element gets the class of "active" and the body element
      gets the class based on active step id `impress-on-ID` (where ID is the step's id)... It may not be
      so clear because of all these "ids" in previous sentence, so for example when the first step (the one with
      the id of `bored`) is active, body element gets a class of `impress-on-bored`.
      
      This class is used by this hint below. Check CSS file to see how it's shown with delayed CSS animation when
      the first step of presentation is visible for a couple of seconds.
      
      \...
      
      And when it comes to this piece of JavaScript below ... kids, don't do this at home ;)
      It's just a quick and dirty workaround to get different hint text for touch devices.
      In a real world it should be at least placed in separate JS file ... and the touch content should be
      probably just hidden somewhere in HTML - not hard-coded in the script.
      
      Just sayin' ;)
    -# .hint
      %p Use a spacebar or arrow keys to navigate
    /
      Last, but not least.
      
      To make all described above really work, you need to include impress.js in the page.
      I strongly encourage to minify it first.
      
      In here I just include full source of the script to make it more readable.
      
      You also need to call a `impress().init()` function to initialize impress.js presentation.
      And you should do it in the end of your document. Not only because it's a good practice, but also
      because it should be done when the whole document is ready.
      Of course you can wrap it in any kind of "DOM ready" event, but I was too lazy to do so ;)
    %script{:src => "js/impress.js"}
    :javascript
      impress().init();
    :javascript
      var client = new Faye.Client('/faye');
      subscription = client.subscribe('/commands', function(message) {
        if (message == 'forward'){
          console.log('forward')
          impress().next()
        } else if (message == 'reverse'){
          console.log('reverse')
          impress().prev()
        } else if (message == 'begin') {
          console.log('beginning')
          impress().goto(0)
        }
      });
    /
      The `impress()` function also gives you access to the API that controls the presentation.
      
      Just store the result of the call:
      
      var api = impress();
      
      and you will get three functions you can call:
      
      `api.init()` - initializes the presentation,
      `api.next()` - moves to next step of the presentation,
      `api.prev()` - moves to previous step of the presentation,
      `api.goto( stepIndex | stepElementId | stepElement, [duration] )` - moves the presentation to the step given by its index number
      id or the DOM element; second parameter can be used to define duration of the transition in ms,
      but it's optional - if not provided default transition duration for the presentation will be used.
      
      You can also simply call `impress()` again to get the API, so `impress().next()` is also allowed.
      Don't worry, it wont initialize the presentation again.
      
      For some example uses of this API check the last part of the source of impress.js where the API
      is used in event handlers.
